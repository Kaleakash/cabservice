{"version":3,"sources":["src/app/auth/login/login.component.html","src/app/auth/signup/signup.component.html","src/app/auth/auth-routing.module.ts","src/app/auth/auth.module.ts","src/app/auth/login/login.component.css","src/app/auth/login/login.component.ts","src/app/auth/signup/signup.component.css","src/app/auth/signup/signup.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<main>\\r\\n  <mat-card>\\r\\n    <form class=\\\"mat-subheading-2\\\" #loginForm=\\\"ngForm\\\" (submit)=onLogin(loginForm)>\\r\\n      <mat-form-field>\\r\\n        <input matInput type=\\\"email\\\" placeholder=\\\"Email\\\" ngModel name=\\\"email\\\" required #email=\\\"ngModel\\\" email=\\\"true\\\">\\r\\n        <mat-error *ngIf=\\\"email.invalid\\\">Please enter valid email</mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" ngModel name=\\\"password\\\" #password=\\\"ngModel\\\" required>\\r\\n        <mat-error *ngIf=\\\"password.invalid\\\">Please enter valid password</mat-error>\\r\\n      </mat-form-field>\\r\\n      <button mat-stroked-button type=\\\"submit\\\" color=\\\"primary\\\">Login</button>\\r\\n    </form>\\r\\n  </mat-card>\\r\\n</main>\\r\\n\"","export default \"<main>\\r\\n  <mat-card>\\r\\n    <form class=\\\"mat-subheading-2\\\" #signupForm=\\\"ngForm\\\" (submit)=onSignup(signupForm) >\\r\\n      <mat-form-field>\\r\\n        <input matInput type=\\\"email\\\" placeholder=\\\"Email\\\" ngModel name=\\\"email\\\" required #email=\\\"ngModel\\\" email=\\\"true\\\" autocomplete=\\\"username\\\">\\r\\n        <mat-error *ngIf=\\\"email.invalid\\\">Please enter valid email</mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" ngModel name=\\\"password\\\" #password=\\\"ngModel\\\"  autocomplete=\\\"current-password\\\" required>\\r\\n        <mat-error *ngIf=\\\"password.invalid\\\">Please enter valid password</mat-error>\\r\\n      </mat-form-field>\\r\\n      <button mat-stroked-button type=\\\"submit\\\" color=\\\"primary\\\">Sign-Up</button>\\r\\n    </form>\\r\\n  </mat-card>\\r\\n</main>\\r\\n\"","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"login\", component: LoginComponent },\r\n  { path: \"signup\", component: SignupComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { AngularMaterialModule } from '../angular-material.module';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, SignupComponent],\r\n  imports: [CommonModule, FormsModule, AngularMaterialModule, AuthRoutingModule]\r\n})\r\nexport class AuthModule {}\r\n","export default \"\\r\\nmat-spinner {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\nmat-form-field {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nmat-card {\\r\\n  width: 60%;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFVBQVU7RUFDVixZQUFZO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9hdXRoL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxubWF0LXNwaW5uZXIge1xyXG4gIG1hcmdpbjogYXV0bztcclxufVxyXG5cclxubWF0LWZvcm0tZmllbGQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5tYXQtY2FyZCB7XHJcbiAgd2lkdGg6IDYwJTtcclxuICBtYXJnaW46IGF1dG87XHJcbn1cclxuIl19 */\"","import { Component } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.css\"]\r\n})\r\nexport class LoginComponent {\r\n  constructor(private authservice: AuthService) {}\r\n\r\n  onLogin(loginForm: NgForm) {\r\n    if (loginForm.invalid) {\r\n      return;\r\n    }\r\n    // console.log(loginForm.value);\r\n    this.authservice.loginUser(loginForm.value.email, loginForm.value.password);\r\n    loginForm.resetForm();\r\n  }\r\n}\r\n","export default \"mat-spinner {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\nmat-form-field {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nmat-card {\\r\\n  width: 60%;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsWUFBWTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvYXV0aC9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtc3Bpbm5lciB7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG59XHJcblxyXG5tYXQtZm9ybS1maWVsZCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbm1hdC1jYXJkIHtcclxuICB3aWR0aDogNjAlO1xyXG4gIG1hcmdpbjogYXV0bztcclxufVxyXG4iXX0= */\"","import { Component } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  templateUrl: \"./signup.component.html\",\r\n  styleUrls: [\"./signup.component.css\"]\r\n})\r\nexport class SignupComponent {\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  onSignup(signupForm: NgForm) {\r\n    // console.log(signupForm.value);\r\n    if ( signupForm.invalid) {\r\n      return;\r\n    }\r\n    this.authService.createUser(signupForm.value.email, signupForm.value.password);\r\n    signupForm.resetForm();\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"auth-auth-module-es5.js"}